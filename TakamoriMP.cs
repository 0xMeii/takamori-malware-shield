using System;
using System.IO;
using System.Net;
using System.Text.RegularExpressions;

namespace TakamoriMalwareShield
{
    class Program
    {
        static void Main(string[] args)
        {
            bool isRunning = true;

            while (isRunning)
            {
                Console.Clear();
                Console.WriteLine("Bienvenido a Takamori Malware Shield");
                Console.WriteLine("Por favor seleccione una opción:");
                Console.WriteLine("1. Verificar si una URL es phishing");
                Console.WriteLine("2. Verificar si un archivo es malware");
                Console.WriteLine("3. Salir");

                string input = Console.ReadLine();
                int option;
                bool success = int.TryParse(input, out option);

                if (!success || option < 1 || option > 3)
                {
                    Console.WriteLine("Opción inválida.");
                    Console.WriteLine("Presione cualquier tecla para continuar...");
                    Console.ReadKey();
                    continue;
                }

                switch (option)
                {
                    case 1:
                        Console.WriteLine("Ingrese la URL:");
                        string url = Console.ReadLine();

                        if (SecurityApp.IsPhishing(url))
                        {
                            Console.WriteLine("¡El sitio es phishing!");
                        }
                        else
                        {
                            Console.WriteLine("El sitio es seguro");
                        }

                        Console.WriteLine("Presione cualquier tecla para continuar...");
                        Console.ReadKey();
                        break;
                    case 2:
                        Console.WriteLine("Ingrese la ruta del archivo:");
                        string file = Console.ReadLine();

                        if (SecurityApp.IsMalware(file))
                        {
                            Console.WriteLine("¡El archivo es malware!");
                        }
                        else
                        {
                            Console.WriteLine("El archivo es seguro");
                        }

                        Console.WriteLine("Presione cualquier tecla para continuar...");
                        Console.ReadKey();
                        break;
                    case 3:
                        isRunning = false;
                        break;
                }
            }
        }
    }

    public class SecurityApp
    {
        public static bool IsPhishing(string url)
        {
            try
            {
                using (var client = new System.Net.WebClient())
                {
                    string htmlCode = client.DownloadString(url);
                    string title = System.Text.RegularExpressions.Regex.Match(htmlCode, @"\<title\b[^>]*\>\s*(?<Title>[\s\S]*?)\</title\>").Groups["Title"].Value;
                    return title.ToLower().Contains("login") || title.ToLower().Contains("password");
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine("Ocurrió un error al verificar la URL: " + ex.Message);
                return false;
            }
        }

        public static bool IsMalware(string file)
        {
            try
            {
                using (var fileStream = new FileStream(file, FileMode.Open, FileAccess.Read))
                {
                    var buffer = new byte[4];
                    int bytesRead = fileStream.Read(buffer, 0, buffer.Length);

                    for (int i = 0; i < bytesRead - 3; i++)
                    {
                        if (buffer[i] == 0x7F && buffer[i + 1] == 'E' && buffer[i + 2] == 'L' && buffer[i + 3] == 'F')
                        {
                            return true;
                        }
                    }
                    return false;
                }
            }
            catch (IOException ex)
            {
                Console.WriteLine("Ocurrió un error al verificar el archivo: " + ex.Message);
                return false;
            }
        }
    }
}
